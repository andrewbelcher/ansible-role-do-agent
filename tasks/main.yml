---
- name: gather os specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - ../vars
      skip: true

- name: ensure old-style do-agent apt repository line is removed
  ansible.builtin.apt_repository:
    repo: "{{ agent_apt_repo_without_key }}"
    filename: "{{ agent_apt_repo_file }}"
    update_cache: true
    state: absent
  when: agent_apt_repo_without_key is defined

- name: ensure old do-agent apt repository is removed
  ansible.builtin.apt_repository:
    repo: "{{ agent_apt_repo_old }}"
    filename: "{{ agent_apt_repo_file }}"
    update_cache: true
    state: absent
  when: agent_apt_repo_old is defined

- name: ensure do-agent requirements are installed
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ agent_pre_packages | default([]) }}"
  when: agent_pre_packages is defined

- name: ensure do-agent apt repository public key is installed
  when: agent_apt_key_url is defined
  block:
    - name: create temporary file for public key
      ansible.builtin.tempfile:
        state: file
      register: temp_apt_key

    - name: download public key
      ansible.builtin.get_url:
        url: "{{ agent_apt_key_url }}"
        dest: "{{ temp_apt_key.path }}.asc"
      register: temp_armored_apt_key

    - name: install public key to keyring
      ansible.builtin.shell: "cat {{ temp_armored_apt_key.dest }} | gpg --dearmor --yes > {{ agent_keyring }}"
      args:
        creates: agent_keyring
      when: temp_armored_apt_key.dest

- name: ensure do-agent apt repository is enabled
  ansible.builtin.apt_repository:
    repo: "{{ agent_apt_repo_with_key }}"
    filename: "{{ agent_apt_repo_file }}"
    update_cache: true
    state: present
  when: agent_apt_repo_with_key is defined

- name: ensure do-agent yum repository is enabled
  ansible.builtin.yum_repository:
    name: digitalocean-agent
    description: DigitalOcean agent
    baseurl: "{{ agent_yum_repo }}"
    file: "{{ agent_yum_repo_file }}"
    gpgkey: "{{ agent_yum_key_url }}"
    gpgcheck: true
    enabled: true
    failovermethod: priority
    state: present
  when: agent_yum_repo is defined

- name: ensure old do-agent packages are uninstalled with yum
  ansible.builtin.package:
    name: do-agent-0.*
    state: absent
  when: agent_yum_repo_old is defined

- name: ensure latest do-agent packages are installed
  ansible.builtin.package:
    name: do-agent
    state: latest

- name: ensure do-agent service is started and enabled
  ansible.builtin.service:
    name: do-agent
    enabled: true
    state: started

- include: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}.yml"
      skip: true
